---
services: docker

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: test.yml

services:
  - docker

before_install:
  # Pull container
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - pwd
  - ls -larth
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible-check_oracle_health:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ls -larth /etc/ansible/roles/'

  # Test role.
  - 'docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/ansible-check_oracle_health/tests/${playbook}'

after_failure:
  # Check MySQL settings.
  # - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm cat /var/log/mysql/error.log'
  # - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm cat /var/log/mysql.err'
  # - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm cat /var/log/mysql.log'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
